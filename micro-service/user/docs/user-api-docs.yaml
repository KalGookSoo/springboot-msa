openapi: 3.0.1
info:
  title: Spring Boot OpenAPI
  description: API 명세
  contact:
    name: kimdoyeob
    url: https://github.com/KalGookSoo/springboot-msa
    email: look3915@naver.com
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: UserRestController
  description: 계정 API
paths:
  /users/{id}:
    get:
      tags:
      - UserRestController
      summary: 계정 조회
      description: 계정을 조회합니다
      operationId: findById
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelUser'
    put:
      tags:
      - UserRestController
      summary: 계정 수정
      description: 계정을 수정합니다
      operationId: updateById
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelUser'
    delete:
      tags:
      - UserRestController
      summary: 계정 삭제
      description: 계정을 삭제합니다
      operationId: deleteById
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /users/{id}/password:
    put:
      tags:
      - UserRestController
      summary: 계정 패스워드 수정
      description: 계정 패스워드를 수정합니다
      operationId: updatePassword
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPasswordCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /users:
    get:
      tags:
      - UserRestController
      summary: 계정 목록 조회
      description: 계정 목록을 조회합니다
      operationId: findAll
      parameters:
      - name: search
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UserSearch'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUser'
    post:
      tags:
      - UserRestController
      summary: 계정 생성
      description: 계정을 생성합니다
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /users/sign-in:
    post:
      tags:
      - UserRestController
      summary: 계정 검증
      description: 계정을 검증합니다
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelUserSummary'
components:
  schemas:
    UpdateUserCommand:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 20
          minLength: 2
          type: string
          description: 이름
          example: 홍길동
        emailId:
          type: string
          description: 이메일 ID
          example: testuser
        emailDomain:
          type: string
          description: 이메일 도메인
          example: kalgooksoo.com
        firstContactNumber:
          type: string
          description: 첫 번째 연락처 번호
          example: "010"
        middleContactNumber:
          type: string
          description: 두 번째 연락처 번호
          example: "1234"
        lastContactNumber:
          type: string
          description: 마지막 연락처 번호
          example: "5678"
      description: 계정 수정 명령
    ContactNumber:
      type: object
      properties:
        first:
          type: string
        middle:
          type: string
        last:
          type: string
    Email:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
    EntityModelUser:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        name:
          type: string
        email:
          $ref: '#/components/schemas/Email'
        contactNumber:
          $ref: '#/components/schemas/ContactNumber'
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        expiredAt:
          type: string
          format: date-time
        lockedAt:
          type: string
          format: date-time
        credentialsExpiredAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        name:
          type: string
        email:
          $ref: '#/components/schemas/Email'
        contactNumber:
          $ref: '#/components/schemas/ContactNumber'
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        expiredAt:
          type: string
          format: date-time
        lockedAt:
          type: string
          format: date-time
        credentialsExpiredAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
    UpdateUserPasswordCommand:
      required:
      - newPassword
      - originPassword
      type: object
      properties:
        originPassword:
          type: string
          description: 현재 패스워드
          example: password
        newPassword:
          type: string
          description: 변경할 패스워드
          example: newpassword
      description: 계정 패스워드 수정 명령
    CreateUserCommand:
      required:
      - name
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          type: string
          description: 계정명
          example: testuser
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
          description: 패스워드
          example: password
        name:
          maxLength: 20
          minLength: 2
          type: string
          description: 이름
          example: 홍길동
        emailId:
          type: string
          description: 이메일 ID
          example: testuser
        emailDomain:
          type: string
          description: 이메일 도메인
          example: kalgooksoo.com
        firstContactNumber:
          type: string
          description: 첫 번째 연락처 번호
          example: "010"
        middleContactNumber:
          type: string
          description: 두 번째 연락처 번호
          example: "1234"
        lastContactNumber:
          type: string
          description: 마지막 연락처 번호
          example: "5678"
      description: 계정 생성 명령
    SignInCommand:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          type: string
          description: 계정명
          example: testuser
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
          description: 패스워드
          example: "12341234"
      description: 로그인 명령
    Authority:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        name:
          type: string
    EntityModelUserSummary:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
        _links:
          $ref: '#/components/schemas/Links'
    UserSearch:
      type: object
      properties:
        page:
          type: integer
          description: 페이지 인덱스
          format: int32
          default: 0
        size:
          type: integer
          description: 페이지 당 출력할 레코드 수
          format: int32
          default: 10
        sort:
          type: string
          description: 정렬할 필드
          default: createdAt
        sortDirection:
          type: string
          description: 정렬 방향
          default: desc
        username:
          type: string
          description: 계정명(대체키)
          example: testuser1
        name:
          type: string
          description: 계정명(또는 별칭)
          example: 홍길동
        emailId:
          type: string
          description: 이메일 ID
          example: testuser
        contactNumber:
          type: string
          description: 연락처
          example: 010-1234-5678
      description: 계정 검색 조건
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            userList:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUser'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
