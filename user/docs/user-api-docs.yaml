openapi: 3.0.1
info:
  title: Spring Boot OpenAPI
  description: API 명세
  contact:
    name: kimdoyeob
    url: https://github.com/KalGookSoo/springboot-msa
    email: look3915@naver.com
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: 1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: UserRestController
  description: 계정 API
- name: SignRestController
  description: 인증 API
paths:
  /users/{id}:
    get:
      tags:
      - UserRestController
      operationId: findById
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
    put:
      tags:
      - UserRestController
      operationId: updateById
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
    delete:
      tags:
      - UserRestController
      operationId: deleteById
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
  /users/{id}/password:
    put:
      tags:
      - UserRestController
      operationId: updatePassword
      parameters:
      - name: id
        in: path
        description: 계정 식별자
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPasswordCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /users:
    get:
      tags:
      - UserRestController
      operationId: findAll
      parameters:
      - name: Authorization
        in: header
        description: Bearer 액세스 토큰
        required: true
        schema:
          type: string
      - name: search
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UserSearch'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUser'
    post:
      tags:
      - UserRestController
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /sign-in:
    post:
      tags:
      - SignRestController
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInCommand'
        required: true
      responses:
        "400":
          description: 잘못된 요청
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TokenModel'
        "200":
          description: 인증 성공
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TokenModel'
components:
  schemas:
    UpdateUserCommand:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 20
          minLength: 2
          type: string
        emailId:
          type: string
        emailDomain:
          type: string
        firstContactNumber:
          type: string
        middleContactNumber:
          type: string
        lastContactNumber:
          type: string
      description: 계정 정보를 업데이트하는 데 사용되는 명령
    ContactNumber:
      type: object
      properties:
        first:
          type: string
        middle:
          type: string
        last:
          type: string
        value:
          type: string
    Email:
      type: object
      properties:
        id:
          type: string
        domain:
          type: string
        value:
          type: string
    EntityModelUser:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        name:
          type: string
        email:
          $ref: '#/components/schemas/Email'
        contactNumber:
          $ref: '#/components/schemas/ContactNumber'
        createdAt:
          type: string
          format: date-time
        modifiedAt:
          type: string
          format: date-time
        expiredAt:
          type: string
          format: date-time
        lockedAt:
          type: string
          format: date-time
        credentialsExpiredAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        accountNonLocked:
          type: boolean
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
        _links:
          $ref: '#/components/schemas/Links'
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    UpdateUserPasswordCommand:
      required:
      - newPassword
      - originPassword
      type: object
      properties:
        originPassword:
          type: string
        newPassword:
          type: string
      description: 계정 패스워드 업데이트 명령
    CreateUserCommand:
      required:
      - name
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        name:
          maxLength: 20
          minLength: 2
          type: string
        emailId:
          type: string
        emailDomain:
          type: string
        firstContactNumber:
          type: string
        middleContactNumber:
          type: string
        lastContactNumber:
          type: string
      description: 계정을 생성하는 데 사용되는 명령
    SignInCommand:
      required:
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
      description: 로그인 명령
    TokenModel:
      type: object
      properties:
        httpStatus:
          type: string
          enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 EARLY_HINTS
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
        code:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: string
    UserSearch:
      type: object
      properties:
        page:
          type: integer
          description: 페이지 인덱스
          format: int32
          default: 0
        size:
          type: integer
          description: 페이지 당 출력할 레코드 수
          format: int32
          default: 10
        sort:
          type: string
          description: 정렬할 필드
          default: createdAt
        sortDirection:
          type: string
          description: 정렬 방향
          default: desc
        username:
          type: string
          description: 계정명(대체키)
        name:
          type: string
          description: 계정명(또는 별칭)
        emailId:
          type: string
          description: 이메일 ID
        contactNumber:
          type: string
          description: 연락처
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUser'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
